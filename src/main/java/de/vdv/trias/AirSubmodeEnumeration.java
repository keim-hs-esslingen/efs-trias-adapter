/*
 * MIT License
 * 
 * Copyright (c) 2020 Hochschule Esslingen
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE. 
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package de.vdv.trias;

import lombok.ToString;
import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AirSubmodeEnumeration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="AirSubmodeEnumeration">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *     &lt;enumeration value="unknown"/>
 *     &lt;enumeration value="undefined"/>
 *     &lt;enumeration value="internationalFlight"/>
 *     &lt;enumeration value="domesticFlight"/>
 *     &lt;enumeration value="intercontinentalFlight"/>
 *     &lt;enumeration value="domesticScheduledFlight"/>
 *     &lt;enumeration value="shuttleFlight"/>
 *     &lt;enumeration value="intercontinentalCharterFlight"/>
 *     &lt;enumeration value="internationalCharterFlight"/>
 *     &lt;enumeration value="roundTripCharterFlight"/>
 *     &lt;enumeration value="sightseeingFlight"/>
 *     &lt;enumeration value="helicopterService"/>
 *     &lt;enumeration value="domesticCharterFlight"/>
 *     &lt;enumeration value="SchengenAreaFlight"/>
 *     &lt;enumeration value="airshipService"/>
 *     &lt;enumeration value="shortHaulInternationalFlight"/>
 *     &lt;enumeration value="canalBarge"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "AirSubmodeEnumeration", namespace = "http://www.vdv.de/trias")
@XmlEnum
public enum AirSubmodeEnumeration {

    @XmlEnumValue("unknown")
    UNKNOWN("unknown"),
    @XmlEnumValue("undefined")
    UNDEFINED("undefined"),
    @XmlEnumValue("internationalFlight")
    INTERNATIONAL_FLIGHT("internationalFlight"),
    @XmlEnumValue("domesticFlight")
    DOMESTIC_FLIGHT("domesticFlight"),
    @XmlEnumValue("intercontinentalFlight")
    INTERCONTINENTAL_FLIGHT("intercontinentalFlight"),
    @XmlEnumValue("domesticScheduledFlight")
    DOMESTIC_SCHEDULED_FLIGHT("domesticScheduledFlight"),
    @XmlEnumValue("shuttleFlight")
    SHUTTLE_FLIGHT("shuttleFlight"),
    @XmlEnumValue("intercontinentalCharterFlight")
    INTERCONTINENTAL_CHARTER_FLIGHT("intercontinentalCharterFlight"),
    @XmlEnumValue("internationalCharterFlight")
    INTERNATIONAL_CHARTER_FLIGHT("internationalCharterFlight"),
    @XmlEnumValue("roundTripCharterFlight")
    ROUND_TRIP_CHARTER_FLIGHT("roundTripCharterFlight"),
    @XmlEnumValue("sightseeingFlight")
    SIGHTSEEING_FLIGHT("sightseeingFlight"),
    @XmlEnumValue("helicopterService")
    HELICOPTER_SERVICE("helicopterService"),
    @XmlEnumValue("domesticCharterFlight")
    DOMESTIC_CHARTER_FLIGHT("domesticCharterFlight"),
    @XmlEnumValue("SchengenAreaFlight")
    SCHENGEN_AREA_FLIGHT("SchengenAreaFlight"),
    @XmlEnumValue("airshipService")
    AIRSHIP_SERVICE("airshipService"),
    @XmlEnumValue("shortHaulInternationalFlight")
    SHORT_HAUL_INTERNATIONAL_FLIGHT("shortHaulInternationalFlight"),
    @XmlEnumValue("canalBarge")
    CANAL_BARGE("canalBarge");
    private final String value;

    AirSubmodeEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AirSubmodeEnumeration fromValue(String v) {
        for (AirSubmodeEnumeration c: AirSubmodeEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
