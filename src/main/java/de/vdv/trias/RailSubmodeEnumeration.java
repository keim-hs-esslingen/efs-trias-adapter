/*
 * MIT License
 * 
 * Copyright (c) 2020 Hochschule Esslingen
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE. 
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package de.vdv.trias;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


import lombok.ToString;
@ToString
/**
 * <p>Java class for RailSubmodeEnumeration.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="RailSubmodeEnumeration">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *     &lt;enumeration value="unknown"/>
 *     &lt;enumeration value="undefined"/>
 *     &lt;enumeration value="local"/>
 *     &lt;enumeration value="highSpeedRail"/>
 *     &lt;enumeration value="suburbanRailway"/>
 *     &lt;enumeration value="regionalRail"/>
 *     &lt;enumeration value="interregionalRail"/>
 *     &lt;enumeration value="longDistance"/>
 *     &lt;enumeration value="international"/>
 *     &lt;enumeration value="sleeperRailService"/>
 *     &lt;enumeration value="nightRail"/>
 *     &lt;enumeration value="carTransportRailService"/>
 *     &lt;enumeration value="touristRailway"/>
 *     &lt;enumeration value="railShuttle"/>
 *     &lt;enumeration value="replacementRailService"/>
 *     &lt;enumeration value="specialTrain"/>
 *     &lt;enumeration value="crossCountryRail"/>
 *     &lt;enumeration value="rackAndPinionRailway"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "RailSubmodeEnumeration", namespace = "http://www.vdv.de/trias")
@XmlEnum
public enum RailSubmodeEnumeration {

    @XmlEnumValue("unknown")
    UNKNOWN("unknown"),
    @XmlEnumValue("undefined")
    UNDEFINED("undefined"),
    @XmlEnumValue("local")
    LOCAL("local"),

    /**
     * See ERA B.4.7009 - (8 high speed train) Long distance train formed by a unit capable for high speed running on high speed or normal lines most modern train unit
     * 
     */
    @XmlEnumValue("highSpeedRail")
    HIGH_SPEED_RAIL("highSpeedRail"),

    /**
     * See ERA B.4.7009 - (12 subUrban) Regional train organised by the regional government public transport in and around cities, running on its own freeways underground or overground, operational running with signals
     * 
     */
    @XmlEnumValue("suburbanRailway")
    SUBURBAN_RAILWAY("suburbanRailway"),

    /**
     * See ERA B.4.7009 - (11 Regional) Regional train organised by the regional government even if formed by a unit capable for high speed running on high speed lines
     * 
     */
    @XmlEnumValue("regionalRail")
    REGIONAL_RAIL("regionalRail"),

    /**
     * See ERA B.4.7009 - (10 Interregional) Regional train running in more than one region.
     * 
     */
    @XmlEnumValue("interregionalRail")
    INTERREGIONAL_RAIL("interregionalRail"),

    /**
     * See ERA B.4.7009 - (9 Intercity) Long distance train formed by a unit capable for high speed or not running on high speed or normal lines modern train unit high quality service restricted stopping pattern
     * 
     */
    @XmlEnumValue("longDistance")
    LONG_DISTANCE("longDistance"),
    @XmlEnumValue("international")
    INTERNATIONAL("international"),
    @XmlEnumValue("sleeperRailService")
    SLEEPER_RAIL_SERVICE("sleeperRailService"),
    @XmlEnumValue("nightRail")
    NIGHT_RAIL("nightRail"),

    /**
     * See ERA B.4.7009 - (14 Motor rail) Service transporting passenger's motor vehicle passengers are admitted either with vehicle only or with or without vehicle
     * 
     */
    @XmlEnumValue("carTransportRailService")
    CAR_TRANSPORT_RAIL_SERVICE("carTransportRailService"),

    /**
     * See ERA B.4.7009 - (16 Historic train)
     * 
     */
    @XmlEnumValue("touristRailway")
    TOURIST_RAILWAY("touristRailway"),
    @XmlEnumValue("railShuttle")
    RAIL_SHUTTLE("railShuttle"),
    @XmlEnumValue("replacementRailService")
    REPLACEMENT_RAIL_SERVICE("replacementRailService"),
    @XmlEnumValue("specialTrain")
    SPECIAL_TRAIN("specialTrain"),
    @XmlEnumValue("crossCountryRail")
    CROSS_COUNTRY_RAIL("crossCountryRail"),

    /**
     * See ERA B.4.7009 - (15 Mountain train) Local train adapted for running in mountain railway lines
     * 
     */
    @XmlEnumValue("rackAndPinionRailway")
    RACK_AND_PINION_RAILWAY("rackAndPinionRailway");
    private final String value;

    RailSubmodeEnumeration(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static RailSubmodeEnumeration fromValue(String v) {
        for (RailSubmodeEnumeration c: RailSubmodeEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
