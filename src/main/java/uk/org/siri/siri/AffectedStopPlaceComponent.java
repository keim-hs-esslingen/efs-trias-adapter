/*
 * MIT License
 * 
 * Copyright (c) 2020 Hochschule Esslingen
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE. 
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package uk.org.siri.siri;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import uk.org.ifopt.ifopt.LinkProjection;
import uk.org.ifopt.ifopt.PointProjection;
import uk.org.ifopt.ifopt.StopPlaceComponentRef;
import uk.org.ifopt.ifopt.StopPlaceComponentTypeEnumeration;
import uk.org.ifopt.ifopt.ZoneProjection;


import lombok.ToString;
@ToString
/**
 * Type for information about the quays affected by an Situation
 * 
 * <p>Java class for AffectedStopPlaceComponent complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AffectedStopPlaceComponentStructure">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.siri.org.uk/siri}AffectedStopPlaceElementStructure">
 *       &lt;sequence>
 *         &lt;element name="ComponentRef" type="{http://www.ifopt.org.uk/ifopt}StopPlaceComponentRefStructure"/>
 *         &lt;element name="ComponentName" type="{http://www.siri.org.uk/siri}NaturalLanguageStringStructure" minOccurs="0"/>
 *         &lt;element name="ComponentType" type="{http://www.ifopt.org.uk/ifopt}StopPlaceComponentTypeEnumeration" minOccurs="0"/>
 *         &lt;group ref="{http://www.ifopt.org.uk/ifopt}PlaceProjectionGroup" minOccurs="0"/>
 *         &lt;element name="Offset" type="{http://www.siri.org.uk/siri}OffsetStructure" minOccurs="0"/>
 *         &lt;element ref="{http://www.siri.org.uk/siri}Extensions" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AffectedStopPlaceComponentStructure", namespace = "http://www.siri.org.uk/siri", propOrder = {
    "componentRef",
    "componentName",
    "componentType",
    "pointProjection",
    "linkProjection",
    "zoneProjection",
    "offset",
    "extensions"
})
public class AffectedStopPlaceComponent
    extends AffectedStopPlaceElement
{

    @XmlElement(name = "ComponentRef", namespace = "http://www.siri.org.uk/siri", required = true)
    protected StopPlaceComponentRef componentRef;
    @XmlElement(name = "ComponentName", namespace = "http://www.siri.org.uk/siri")
    protected NaturalLanguageString componentName;
    @XmlElement(name = "ComponentType", namespace = "http://www.siri.org.uk/siri")
    @XmlSchemaType(name = "string")
    protected StopPlaceComponentTypeEnumeration componentType;
    @XmlElement(name = "PointProjection", namespace = "http://www.ifopt.org.uk/ifopt")
    protected PointProjection pointProjection;
    @XmlElement(name = "LinkProjection", namespace = "http://www.ifopt.org.uk/ifopt")
    protected LinkProjection linkProjection;
    @XmlElement(name = "ZoneProjection", namespace = "http://www.ifopt.org.uk/ifopt")
    protected ZoneProjection zoneProjection;
    @XmlElement(name = "Offset", namespace = "http://www.siri.org.uk/siri")
    protected Offset offset;
    @XmlElement(name = "Extensions", namespace = "http://www.siri.org.uk/siri")
    protected Extensions extensions;

    /**
     * Gets the value of the componentRef property.
     * 
     * @return
     *     possible object is
     *     {@link StopPlaceComponentRef }
     *     
     */
    public StopPlaceComponentRef getComponentRef() {
        return componentRef;
    }

    /**
     * Sets the value of the componentRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link StopPlaceComponentRef }
     *     
     */
    public AffectedStopPlaceComponent setComponentRef(StopPlaceComponentRef value) {
        this.componentRef = value;
        return this;
    }

    /**
     * Gets the value of the componentName property.
     * 
     * @return
     *     possible object is
     *     {@link NaturalLanguageString }
     *     
     */
    public NaturalLanguageString getComponentName() {
        return componentName;
    }

    /**
     * Sets the value of the componentName property.
     * 
     * @param value
     *     allowed object is
     *     {@link NaturalLanguageString }
     *     
     */
    public AffectedStopPlaceComponent setComponentName(NaturalLanguageString value) {
        this.componentName = value;
        return this;
    }

    /**
     * Gets the value of the componentType property.
     * 
     * @return
     *     possible object is
     *     {@link StopPlaceComponentTypeEnumeration }
     *     
     */
    public StopPlaceComponentTypeEnumeration getComponentType() {
        return componentType;
    }

    /**
     * Sets the value of the componentType property.
     * 
     * @param value
     *     allowed object is
     *     {@link StopPlaceComponentTypeEnumeration }
     *     
     */
    public AffectedStopPlaceComponent setComponentType(StopPlaceComponentTypeEnumeration value) {
        this.componentType = value;
        return this;
    }

    /**
     * Gets the value of the pointProjection property.
     * 
     * @return
     *     possible object is
     *     {@link PointProjection }
     *     
     */
    public PointProjection getPointProjection() {
        return pointProjection;
    }

    /**
     * Sets the value of the pointProjection property.
     * 
     * @param value
     *     allowed object is
     *     {@link PointProjection }
     *     
     */
    public AffectedStopPlaceComponent setPointProjection(PointProjection value) {
        this.pointProjection = value;
        return this;
    }

    /**
     * Gets the value of the linkProjection property.
     * 
     * @return
     *     possible object is
     *     {@link LinkProjection }
     *     
     */
    public LinkProjection getLinkProjection() {
        return linkProjection;
    }

    /**
     * Sets the value of the linkProjection property.
     * 
     * @param value
     *     allowed object is
     *     {@link LinkProjection }
     *     
     */
    public AffectedStopPlaceComponent setLinkProjection(LinkProjection value) {
        this.linkProjection = value;
        return this;
    }

    /**
     * Gets the value of the zoneProjection property.
     * 
     * @return
     *     possible object is
     *     {@link ZoneProjection }
     *     
     */
    public ZoneProjection getZoneProjection() {
        return zoneProjection;
    }

    /**
     * Sets the value of the zoneProjection property.
     * 
     * @param value
     *     allowed object is
     *     {@link ZoneProjection }
     *     
     */
    public AffectedStopPlaceComponent setZoneProjection(ZoneProjection value) {
        this.zoneProjection = value;
        return this;
    }

    /**
     * Gets the value of the offset property.
     * 
     * @return
     *     possible object is
     *     {@link Offset }
     *     
     */
    public Offset getOffset() {
        return offset;
    }

    /**
     * Sets the value of the offset property.
     * 
     * @param value
     *     allowed object is
     *     {@link Offset }
     *     
     */
    public AffectedStopPlaceComponent setOffset(Offset value) {
        this.offset = value;
        return this;
    }

    /**
     * Gets the value of the extensions property.
     * 
     * @return
     *     possible object is
     *     {@link Extensions }
     *     
     */
    public Extensions getExtensions() {
        return extensions;
    }

    /**
     * Sets the value of the extensions property.
     * 
     * @param value
     *     allowed object is
     *     {@link Extensions }
     *     
     */
    public AffectedStopPlaceComponent setExtensions(Extensions value) {
        this.extensions = value;
        return this;
    }

}
